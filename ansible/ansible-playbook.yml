- name: Update web servers
  hosts: managed-nodes
  remote_user: ec2-user
  vars:
    host: "{{ inventory_hostname }}"
  vars_prompt:
    - name: debug_mode
      prompt: Do you want to run the app in debug mode
      default: false
      private: false

    - name: flask_secret_key
      prompt: Provide a secret key for the flask app
      default: "secret_key"
      private: true

    - name: spotify_client_id
      prompt: Provide the spotify client id app
      private: false

    - name: spotify_secret
      prompt: Provide a secret key for the spotify client
      private: true

  tasks:
    - name: Install Git
      yum:
        name: "git"
        state: "present"
        update_cache: yes
      become: yes # Installing git must be run as the root user

    - name: Install Python
      yum:
        name: "python3.11"
        state: "present"
        update_cache: yes
      become: yes # Installing python must be run as the root user

    - name: Install Node
      yum:
        name: "nodejs"
        state: "present"
        update_cache: yes
      become: yes # Installing node must be run as the root user

    - name: Install Poetry
      shell:
        cmd: "curl -sSL https://install.python-poetry.org | python3.11 -"
        creates: "/home/ec2-user/.local/bin/poetry"

    - name: Create folder for Playlist Manager
      file:
        path: /opt/playlist-manager
        state: directory
        owner: "ec2-user"
      become: yes

    - name: Clone Playlist Manager
      git:
        repo: "https://github.com/CalPinSW/playlist-manager.git"
        version: "add-ansible-configuration"
        dest: "/opt/playlist-manager"

    - name: Install Project Backend Dependencies
      shell:
        chdir: "/opt/playlist-manager/backend"
        cmd: "poetry env use python3.11; poetry install"

    - name: Install Project Frontend Dependencies
      shell:
        chdir: "/opt/playlist-manager/frontend"
        cmd: "npm install"

    - name: Fetch backend environment template
      run_once: yes
      fetch:
        src: /opt/playlist-manager/backend/.env.j2
        dest: /tmp/backend/.env.j2
        flat: yes

    - name: Fetch frontend environment template
      run_once: yes
      fetch:
        src: /opt/playlist-manager/frontend/.env.j2
        dest: /tmp/frontend/.env.j2
        flat: yes

    - name: Setup backend environment variables
      template:
        src: /tmp/backend/.env.j2
        dest: /opt/playlist-manager/backend/.env

    - name: Setup frontend environment variables
      template:
        src: /tmp/frontend/.env.j2
        dest: /opt/playlist-manager/frontend/.env
